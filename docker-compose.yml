services:
  postgres:
    container_name: postgres
    hostname: postgres
    image: postgres
    env_file:
      - secret.env
    ports:
      - '5432:5432'
    volumes:
      - 'postgres:/data/postgres'
    restart: unless-stopped
    networks:
      planboard-network:
        aliases:
          - my-postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5

  zookeeper:
    image: bitnami/zookeeper:3.8.0
    container_name: my-zookeeper
    restart: on-failure
    ports:
      - "2181:2181"
    environment:
      ZOO_PORT: 2181
      ALLOW_ANONYMOUS_LOGIN: "yes"
    networks:
      planboard-network:
        aliases:
          - my-zookeeper

  kafka:
    image: bitnami/kafka:3.8.0
    container_name: my-kafka
    restart: on-failure
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    env_file:
      - dev.env
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://my-kafka:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "my-zookeeper:2181"
      KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
      ALLOW_PLAINTEXT_LISTENER: "yes"
    networks:
      planboard-network:
        aliases:
          - my-kafka
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "9092" ]
      interval: 30s
      retries: 5

  planboard-sender:
    image: lynxiox/planboard-email-sender:latest
    restart: unless-stopped
    depends_on:
      - kafka
    env_file:
      - secret.env
    networks:
      - planboard-network
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8081/actuator/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5

  planboard-api:
    image: lynxiox/planboard-api:latest
    restart: unless-stopped
    env_file:
      - secret.env
    depends_on:
      - postgres
      - kafka
    ports:
      - '8080:8080'
    networks:
      - planboard-network
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5

  planboard-scheduler:
    image: lynxiox/planboard-scheduler:latest
    restart: unless-stopped
    env_file:
      - secret.env
    depends_on:
      - kafka
      - postgres
    networks:
      - planboard-network
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8082/actuator/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5

  planboard-frontend:
    image: lynxiox/planboard-front:latest
    restart: unless-stopped
    env_file:
      - secret.env
    depends_on:
      - planboard-api
    ports:
      - '80:80'
    networks:
      - planboard-network

volumes:
  postgres:

networks:
  planboard-network:
    driver: bridge
    name: planboard-network
